class Solution {
    public int left(int []nums,int target){
        int low=0;
        int high=nums.length-1;
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]==target){
                ans=mid;
                high=mid-1;
            }
            else if (nums[mid] > target) {
                high = mid - 1;        
            } 
            else low=mid+1;
        }
        return ans;
    }
    public int right(int []nums,int target){
        int low=0;
        int high=nums.length-1;
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]==target){
                ans=mid;
                low=mid+1;
            }
            else if (nums[mid] > target) {
                high = mid - 1;       
            } 
            else low=mid+1;
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) {
        int res[]={-1,-1};
        res[0]=left(nums,target);
        res[1]=right(nums,target); 
       return res;
    }
}
